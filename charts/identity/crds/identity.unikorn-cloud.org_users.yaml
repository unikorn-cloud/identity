---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: users.identity.unikorn-cloud.org
spec:
  group: identity.unikorn-cloud.org
  names:
    categories:
    - unikorn
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.subject
      name: subject
      type: string
    - jsonPath: .spec.state
      name: state
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          User represents an entity with a federated login credential.  Users are
          globally scoped, and may exist in multiple organizations at once.  The user
          must be in the active state initially to allow login.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              sessions:
                description: Sessions record active user sessions.
                items:
                  properties:
                    accessToken:
                      description: |-
                        AccessToken is the access token currently issued for the
                        session.  This field is opaque, and may be hashed for security.
                      type: string
                    authorizationCodeID:
                      description: |-
                        AuthorizationCodeID is the authorization code ID used to generate
                        the tokens.
                      type: string
                    clientID:
                      description: ClientID is the client the session is bound to.
                      type: string
                    lastAuthentication:
                      description: LastAuthentication records when the user last authenticated.
                      format: date-time
                      type: string
                    refreshToken:
                      description: |-
                        RefreshToken is the single-use refresh token currently
                        issued for the session. This field is opaque, and may be hashed
                        for security.
                      type: string
                  required:
                  - accessToken
                  - authorizationCodeID
                  - clientID
                  - refreshToken
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - clientID
                x-kubernetes-list-type: map
              signup:
                description: Signup is set when the user is being verified.
                properties:
                  clientID:
                    description: |-
                      ClientID remembers the oauth2 client that added the user in the first
                      place so that we can link to per-client email templates and error
                      handling dialogs.
                    type: string
                  token:
                    description: |-
                      Token is used to store a time limited one use sign-up token
                      in order to transition from the pending to active state.  It typically
                      involves an email to notify the user they have been added.
                    type: string
                required:
                - clientID
                - token
                type: object
              state:
                description: State controls what the user is allowed to do.
                type: string
              subject:
                description: |-
                  Subject is usually and email address, sadly this cannot be made
                  a label for selection that way.  This will map to the subject in
                  a JWT.
                type: string
              tags:
                description: Tags are aribrary user data.
                items:
                  description: Tag is an arbirary key/value.
                  properties:
                    name:
                      description: Name of the tag.
                      type: string
                    value:
                      description: Value of the tag.
                      type: string
                  required:
                  - name
                  - value
                  type: object
                type: array
            required:
            - state
            - subject
            type: object
          status:
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
